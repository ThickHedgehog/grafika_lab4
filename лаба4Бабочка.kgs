<?xml version="1.0" encoding="utf-8"?>
<project vert=" varying vec2 texCoord;&#xD; varying vec3 Normal;&#xD; &#xD; /////////////////&#xD; &#xD; varying vec3 Position;&#xD; &#xD; uniform mat4 iModelViewMatrix;&#xD; &#xD; uniform vec3 iLightPos; &#xD; uniform vec3 iCamPos; &#xD; &#xD; varying vec3 iLightPos_mv;&#xD; varying vec3 iCamPos_mv;&#xD; ////////////////&#xD; &#xD; &#xD; void main(void)&#xD; {&#xD;    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix*gl_Vertex;&#xD;    texCoord = gl_MultiTexCoord0.xy;&#xD;    Position = (gl_ModelViewMatrix*gl_Vertex).xyz;&#xD;    Normal = (gl_NormalMatrix *gl_Normal).xyz;&#xD;    Normal = normalize(gl_Normal);&#xD;    iLightPos_mv = (iModelViewMatrix*vec4(iLightPos,1.0)).xyz;    &#xD;    iCamPos_mv = (iModelViewMatrix*vec4(iCamPos,1.0)).xyz;&#xD;&#xD; }" pix="varying vec2 texCoord;&#xD;varying vec3 Normal;&#xD;uniform sampler2D iTexture0;&#xD;uniform sampler2D iTexture1;&#xD;uniform sampler2D iTexture2;&#xD;uniform sampler2D iTexture3;&#xD;varying vec3 Position;&#xD;vec3 Ia = vec3(0.2,0.2,0.2);&#xD;vec3 Id = vec3(0.7,0.7,0.7);&#xD;vec3 Is = vec3(1.0,1.0,1.0);&#xD;vec3 ma = vec3(1,1,1);&#xD;vec3 md = vec3(1,1,1);&#xD;vec3 ms = vec3(1,1,1);&#xD;float  alpha = 10.0;&#xD;&#xD;varying vec3 iLightPos_mv;&#xD;varying vec3 iCamPos_mv;&#xD;&#xD;vec3 color_amb, color_dif, col_spec;&#xD;vec4 texture0 = vec4(texture2D(iTexture0, texCoord).rgb, 1.0);&#xD; void main(void)&#xD; {&#xD;    Normal = vec3(texture2D(iTexture1, texCoord)).rgb;&#xD;    Normal = normalize(Normal * 2.0 - 1.0);&#xD;    &#xD;    // ambient&#xD;&#x9;color_amb = Ia * ma;&#xD;&#x9;&#xD;&#x9;// diffuse&#xD;&#x9;vec3 light_vector = normalize(iLightPos_mv - Position);&#xD;&#x9;color_dif = Id * md * dot(light_vector, Normal);&#xD;&#x9;&#xD;&#x9;// specular&#xD;&#x9;vec3 cam_vector = normalize(iCamPos_mv - Position);&#xD;&#x9;vec3 reflect_vector = reflect(-light_vector, Normal);&#xD;&#x9;float cosRC = max(0.0, dot(cam_vector, reflect_vector));&#x9;&#xD;&#x9;col_spec = Is * ms * pow(cosRC,300);&#xD;&#xD;&#x9;   &#xD;    float x = texCoord.x;&#xD;    float y = texCoord.y;&#xD;    float r = 0.0;&#xD;    &#xD;    // Крыло&#xD;&#x9;if (((cos(4 * x + 1.17)) / 2 + 0.5) &lt; y &amp;&amp; (y &lt; 0.5)) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;    &#xD;    // Первая кромка крыла&#xD;&#x9;for (float t = 0.138 ; t &lt;= 0.47 ; t += 0.04) {&#xD;&#x9;&#x9;r = (-(t - 0.1) * (t - 0.4) + 0.56);&#xD;&#x9;&#x9;if(((-50 * pow(x-t, 2) + r) &gt; y) &amp;&amp; (y &gt; 0.5) ) {&#xD;&#x9;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;&#x9;&#x9;//gl_FragColor = vec4(0, 0, 0, 1);&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// Вторая кромка крыла&#xD;&#x9;r = 0.0;&#xD;&#x9;for (float t = 0.5 ; t &lt;= 0.9; t += 0.04) {&#xD;&#x9;&#x9;r=(-(pow(1.75*t-1.2, 2)) + 0.65);&#xD;&#x9;&#x9;if(((-80 * pow(x-t, 2) + r) &gt; y) &amp;&amp; (y &gt; 0.5) ) {&#xD;&#x9;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// Тело&#xD;&#x9;if ((pow(0.15*x-0.08, 2) + pow(y, 2)) &lt; 0.001) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// Голова&#xD;&#x9;if (((x - 0.35) * (x - 0.25) + pow(y, 2)) &lt; 0.002) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;} &#xD;&#x9;&#xD;&#x9;// Усы&#xD;&#x9;if ((pow(120*y-3, 2) + 0.1 &lt; x) &amp;&amp; (x &lt; 0.239)) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#x9;&#xD;&#x9;}&#xD;&#xD;&#x9;// Херня на теле&#xD;&#x9;for (float t = 0.35, z = 0; t &lt;= 0.71 ; t += 0.025, z -= 0.10) {&#xD;&#x9;&#x9;if (pow(x-t, 2) + pow(y, 2) &lt; 0.00015) {&#xD;&#x9;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#xD;&#x9;// Глаз&#xD;&#x9;if (pow(x-0.275, 2) + (y-0.03)*(y-0.02) &lt; 0.00009) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#x9;&#xD;&#x9;}&#x9;&#xD;&#x9;if (pow(x-0.27, 2) + pow(y-0.022, 2) &lt; 0.00003) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#x9;&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// Узоры&#xD;&#x9;r = 0.1;&#xD;&#x9;if(pow(r, 2) &gt; pow(x-0.7, 2) + pow((y-0.45), 2)) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;r = 0.1;&#xD;&#x9;if(pow(r, 2) &gt; pow(x-0.7, 2) + pow((y-0.4), 2)) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;r = 0.05;&#xD;&#x9;if(pow(r, 2) &gt; pow(x-0.7, 2) + pow((y-0.4), 2)) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// Сэрдэчки&#xD;&#x9;float x1 = 0.4;&#xD;&#x9;float y1 = 0.2;&#xD;&#x9;if (pow(pow(x-x1, 2) + pow(y-y1, 2) - 0.0015, 2)&#xD;&#x9;* (pow(x-x1, 2) + pow(y-y1, 2) - 0.0015)-0.3&#xD;&#x9;* pow(x-x1, 2) * pow(y-y1, 3) &lt; 0) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;x1 = 0.6;&#xD;&#x9;y1 = 0.2;&#xD;&#x9;if (pow(pow(x-x1, 2) + pow(y-y1, 2) - 0.0015, 2)&#xD;&#x9;* (pow(x-x1, 2) + pow(y-y1, 2) - 0.0015)-0.3&#xD;&#x9;* pow(x-x1, 2) * pow(y-y1, 3) &lt; 0) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;x1 = 0.5;&#xD;&#x9;y1 = 0.1;&#xD;&#x9;if (pow(pow(x-x1, 2) + pow(y-y1, 2) - 0.0015, 2)&#xD;&#x9;* (pow(x-x1, 2) + pow(y-y1, 2) - 0.0015)-0.3&#xD;&#x9;* pow(x-x1, 2) * pow(y-y1, 3) &lt; 0) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;// РОССИЯ ВУУУ ХУУУУУ&#xD;&#x9;if (x &gt; 0.2 &amp;&amp; x &lt; 0.25 &amp;&amp; y &gt; 0.35 &amp;&amp; y &lt; 0.5) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;if (x &gt; 0.25 &amp;&amp; x &lt; 0.3 &amp;&amp; y &gt; 0.35 &amp;&amp; y &lt; 0.5) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;&#x9;&#xD;&#x9;if (x &gt; 0.3 &amp;&amp; x &lt; 0.35 &amp;&amp; y &gt; 0.35 &amp;&amp; y &lt; 0.5) {&#xD;&#x9;&#x9;gl_FragColor = vec4(texture0 * (color_amb + color_dif + col_spec), 1.0);&#xD;&#x9;}&#xD;}&#xD;&#xD;" tt0="1" t0="C:\Users\Rostik\Desktop\2019-4.KG-SHADERS\Бэбочка\texture2.png" tt1="1" t1="C:\Users\Rostik\Desktop\2019-4.KG-SHADERS\Бэбочка\NormalMap2.png" tt2="0" t2="" tt3="0" t3="" />